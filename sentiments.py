# -*- coding: utf-8 -*-
"""Sentiments.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19ItGRqbrqWWR7Up7-kTnI6r883KrH4-g
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import nltk
from nltk.sentiment import SentimentIntensityAnalyzer

# Unzipping
import zipfile

# Unzip the file
with zipfile.ZipFile('Reviews.csv.zip', 'r') as zip_ref:
    zip_ref.extractall('.')

# Read the csv file
df=pd.read_csv("Reviews.csv")

print(df.shape)
df = df.head(500)
print(df.shape)

ax = df['Score'].value_counts().sort_index().plot(kind='bar',
          title='Count of Reviews by Stars',
          figsize=(10, 5))
ax.set_xlabel('Review Stars')
plt.show()

example = df['Text'][50]
print(example)

tokens = nltk.word_tokenize(example, language="english")
tokens[:10]

nltk.download('punkt_tab')

tagged = nltk.pos_tag(tokens)
tagged[:10]

nltk.download('averaged_perceptron_tagger_eng')

entities = nltk.chunk.ne_chunk(tagged)
entities.pprint()

nltk.download('maxent_ne_chunker_tab')
 nltk.download('words')

nltk.download('vader_lexicon')

from nltk.sentiment import SentimentIntensityAnalyzer
from tqdm.notebook import tqdm

sia = SentimentIntensityAnalyzer()

sia.polarity_scores(example)

# Run the polarity score on the entire dataset
res = {}
for i, row in tqdm(df.iterrows(), total=len(df)):
    text = row['Text']
    myid = row['Id']
    res[myid] = sia.polarity_scores(text)

vaders = pd.DataFrame(res).T
vaders = vaders.reset_index().rename(columns={'index': 'Id'})
vaders = vaders.merge(df, how='left')

vaders.head()
ax = sns.barplot(data=vaders, x='Score', y='compound')
ax.set_title('Compund Score by Amazon Star Review')
plt.show()

fig, axs = plt.subplots(1, 3, figsize=(12, 3))
sns.barplot(data=vaders, x='Score', y='pos', ax=axs[0])
sns.barplot(data=vaders, x='Score', y='neu', ax=axs[1])
sns.barplot(data=vaders, x='Score', y='neg', ax=axs[2])
axs[0].set_title('Positive')
axs[1].set_title('Neutral')
axs[2].set_title('Negative')
plt.tight_layout()
plt.show()